# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x64)
  test_config = debug_x64
  soak_config = debug_x64
  stats_config = debug_x64
  fuzz_config = debug_x64
endif
ifeq ($(config),release_x64)
  test_config = release_x64
  soak_config = release_x64
  stats_config = release_x64
  fuzz_config = release_x64
endif

PROJECTS := test soak stats fuzz

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

test:
ifneq (,$(test_config))
	@echo "==== Building test ($(test_config)) ===="
	@${MAKE} --no-print-directory -C . -f test.make config=$(test_config)
endif

soak:
ifneq (,$(soak_config))
	@echo "==== Building soak ($(soak_config)) ===="
	@${MAKE} --no-print-directory -C . -f soak.make config=$(soak_config)
endif

stats:
ifneq (,$(stats_config))
	@echo "==== Building stats ($(stats_config)) ===="
	@${MAKE} --no-print-directory -C . -f stats.make config=$(stats_config)
endif

fuzz:
ifneq (,$(fuzz_config))
	@echo "==== Building fuzz ($(fuzz_config)) ===="
	@${MAKE} --no-print-directory -C . -f fuzz.make config=$(fuzz_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f test.make clean
	@${MAKE} --no-print-directory -C . -f soak.make clean
	@${MAKE} --no-print-directory -C . -f stats.make clean
	@${MAKE} --no-print-directory -C . -f fuzz.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x64"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   test"
	@echo "   soak"
	@echo "   stats"
	@echo "   fuzz"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"